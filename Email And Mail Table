codeunit 50100 EmailTo
{
    procedure SendEmail(ItemLedgerEntries: Record "Item Ledger Entry");
    var

        CCRecipient: List of [Text];
        ToRecipient: List of [Text];
        BccRecipient: List of [Text];
        AttachmentTempBlob: Codeunit "Temp Blob";
        RecordrefVar: RecordRef;
        XMLPara: Text;
        body: Text;
        Body1: Label 'Hi Team,';
        Text0002: Label 'Item Ledger Entries of Entry type "%1" & Document Type "%2"';
        CCRecipient2: Text;
        ToRecipient2: Text;
        Seperator: text;
        InventorySetup: Record "Inventory Setup";
        Vendor: record vendor;
        Item: Record Item;
        Text004: Label 'Message Sent Successfully';
    begin
        InventorySetup.Get();
        if InventorySetup.EmailTo <> '' then begin
            ToRecipient2 := InventorySetup.EmailTo;
            ToRecipient := ToRecipient2.Split(Seperator.Split());
        end;

        ItemLedgerEntries.Reset();
        ItemLedgerEntries.SetCurrentKey("Entry Type", "Document Type");
        ItemLedgerEntries.SetRange("Entry Type", ItemLedgerEntries."Entry Type"::Sale);
        ItemLedgerEntries.SetRange("Document Type", ItemLedgerEntries."Document Type"::"Sales Shipment");
        if ItemLedgerEntries.FindSet() then begin
            MailTable();
            repeat
                EmailMessage.AppendToBody('<tr>');
                EmailMessage.AppendToBody('<td>' + ItemLedgerEntries."Item No." + '</td>');
                EmailMessage.AppendToBody('<td>' + ItemLedgerEntries."Lot No." + '</td>');
                EmailMessage.AppendToBody('<td>' + Format(ItemLedgerEntries."Expiration Date") + '</td>');
                EmailMessage.AppendToBody('</tr>');
                EmailMessage.AppendToBody('</br>');
            until ItemLedgerEntries.Next = 0;

            EmailMessage.AppendToBody('</table>');
            EmailMessage.AppendToBody('<hr>');
            Email.Send(EmailMessage, Enum::"Email Scenario"::Default);
            Message(Text004);
        end
    end;

    procedure MailTable()
    var
        InnventorySetup: record "Inventory Setup";
    begin
        InnventorySetup.Get();
        Clear(EmailMessage);
        EmailMessage.Create(InnventorySetup.EmailTo, 'Sale', 'Hi Team');
        EmailMessage.SetBodyHTMLFormatted(true);
        EmailMessage.AppendToBody('<br>');
        EmailMessage.AppendToBody('Find the below Item Ledger Entries <b>');
        EmailMessage.AppendToBody('<br>');
        EmailMessage.AppendToBody('<br>');
        EmailMessage.AppendToBody('<BR>');
        EmailMessage.AppendToBody('<table border="1">');
        EmailMessage.AppendToBody('<tr>');
        EmailMessage.AppendToBody('<th>Item no.</th>');
        EmailMessage.AppendToBody('<th>Lot No</th>');
        EmailMessage.AppendToBody('<th>Expiration Date</th>');
        EmailMessage.AppendToBody('</tr>');
    end;

    var
        Email: Codeunit Email;
        EmailMessage: Codeunit "Email Message";
        Text001: Label 'Item Ledger Entries';
        Subject: Text;
        ItemLedgerentriesGRec: record "Item Ledger Entry";
} 

procedure SendMail()
    var
        CCRecipient: List of [Text];
        Recipiants: List of [Text];
        ToRecipient: List of [Text];
        BccRecipient: List of [Text];
        Body1: Text;
        Body: Label 'Dear %1,';
        Text000: Label 'This is a counseling schedule notification.';
        Text001: Label 'A Counseling Session is Scheduled on %1 ';
        Text003: Label ' with %1 %2-Mobile No- %3. ';
        Text004: Label 'The Judian Speaks %1.';
        Text005: Label 'This is a %1. ';
        Text006: Label 'The call is scheduled by %1 on behalf of St. Judes For Life.';
        Text007: Label 'Thank you.';
        Text008: Label ' with %1-%3 %2.Mobile No- %4.';
        Text1: Label 'Regards,';
        Text2: Label 'Team St.Jude';
        Text002: Label 'Followup Scheduled.......Email Sent Succesfully';
        UserRec: Record User;
        UserName: Text[100];
        JudianRec: Record Judians;
        CCRecipient2: Text;
        ToRecipient2: Text;
        Seperator: text;
        CounsellorsLRec: Record Counsellors;
    begin
        Clear(ToRecipient);
        FollowUpDetailsDocRec.Reset();
        FollowUpDetailsDocRec.SetRange("Follow Up ID", Rec."Follow Up ID");
        if FollowUpDetailsDocRec.FindFirst() then
            if FollowUpDetailsDocRec."Counsellors Email ID" <> '' then begin
                ToRecipient2 := FollowUpDetailsDocRec."Counsellors Email ID";
                ToRecipient := ToRecipient2.Split(Seperator.Split());
            end;

        if UserRec.Get(UserSecurityId()) then
            UserName := UserRec."Full Name";

        FollowUpDetailsLineRec.Reset();
        FollowUpDetailsLineRec.SetRange("Follow Up ID", Rec."Follow Up ID");
        if FollowUpDetailsLineRec.FindFirst() then
            repeat
                UIDGVvar := FollowUpDetailsLineRec.UID;
                JudianName := FollowUpDetailsLineRec."Judian Name";
                WhatsappNos := FollowUpDetailsLineRec."Whatsapp No";
            until FollowUpDetailsLineRec.Next() = 0;

        EmailMessage.Create(ToRecipient, Rec."Counsellors Email ID", Subject, true, CCRecipient, BccRecipient);
        EmailMessage.AppendToBody(StrSubstNo(Body, Rec."Counsellor Name"));
        EmailMessage.AppendToBody('<BR></BR>');
        EmailMessage.AppendToBody('<BR></BR>');
        EmailMessage.AppendToBody(Text000);
        EmailMessage.AppendToBody('<BR></BR>');
        EmailMessage.AppendToBody('<BR></BR>');
        if Rec."Session Type" = Rec."Session Type"::"Individual Session" then begin
            EmailMessage.AppendToBody(StrSubstNo(Text001, Rec."Follow Up Date"));
            EmailMessage.AppendToBody(StrSubstNo(Text003, JudianName, Rec."Follow Up ID", WhatsappNos));
            EmailMessage.AppendToBody(StrSubstNo(Text004, Rec."Language Name"));
            EmailMessage.AppendToBody(StrSubstNo(Text005, Rec."Session Type"));
            EmailMessage.AppendToBody('<BR></BR>');
            EmailMessage.AppendToBody('<BR></BR>');
            EmailMessage.AppendToBody(StrSubstNo(Text006, UserName));
            EmailMessage.AppendToBody('<BR></BR>');
            EmailMessage.AppendToBody('<BR></BR>');
            EmailMessage.AppendToBody(Text007);
            Email.Send(EmailMessage, Enum::"Email Scenario"::Default);
            Message(Text002);
        End
        Else begin
            MailAlert();
            if Printed then begin
                EmailMessage.AppendToBody('</table>');
                EmailMessage.AppendToBody('<BR></BR>');
                EmailMessage.AppendToBody('<BR></BR>');
                EmailMessage.AppendToBody(StrSubstNo(Text004, Rec."Language Name"));
                EmailMessage.AppendToBody(StrSubstNo(Text005, Rec."Session Type"));
                EmailMessage.AppendToBody('<BR></BR>');
                EmailMessage.AppendToBody('<BR></BR>');
                EmailMessage.AppendToBody(StrSubstNo(Text006, UserName));
                EmailMessage.AppendToBody('<BR></BR>');
                EmailMessage.AppendToBody('<BR></BR>');
                EmailMessage.AppendToBody(Text007);
                Email.Send(EmailMessage, Enum::"Email Scenario"::Default);
                Message(Text002);
            end;
        end;
    End;


 procedure MailAlert()
    var
        Text004: Label 'The Judian Speaks %1.';
        Text005: Label 'This is a %1 . ';
        Text006: Label 'The call is scheduled by %1 on behalf of St. Judes For Life.';
        Text007: Label 'Thank you.';
        UserRec: Record User;
        UserName: Text[100];
        Text002: Label 'Followup Scheduled.......Email Sent Succesfully';
        FollowUpDetailsLineRec1: Record "CRM Follow Up Line";
    begin
        FollowUpDetailsLineRec1.Reset();
        FollowUpDetailsLineRec1.SetRange("Follow Up ID", Rec."Follow Up ID");
        if FollowUpDetailsLineRec1.FindFirst() then begin
            MailTable;
            repeat
                Printed := true;
                EmailMessage.AppendToBody('<tr>');
                EmailMessage.AppendToBody('<td>' + FollowUpDetailsLineRec1.UID + '</td>');
                EmailMessage.AppendToBody('<td>' + FollowUpDetailsLineRec1."Judian Name" + '</td>');
                EmailMessage.AppendToBody('<td>' + FollowUpDetailsLineRec1."Whatsapp No" + '</td>');
                EmailMessage.AppendToBody('</tr>');
                EmailMessage.AppendToBody('</br>');
            until FollowUpDetailsLineRec1.Next = 0;
        end;
    End;

    procedure MailTable()
    var
        Text001: Label 'A Counseling Session is Scheduled on %1. Find the below Follow Up Schedules';
        Text002: Label 'Find the below Follow Up Schedules<b>';
    begin
        if Rec."Follow Up ID" = '' then
            exit;
        EmailMessage.SetBodyHTMLFormatted(true);
        /* EmailMessage.AppendToBody('<br>');*/
        EmailMessage.AppendToBody('<br>');
        EmailMessage.AppendToBody(StrSubstNo(Text001, Rec."Follow Up Date"));
        /* EmailMessage.AppendToBody('Find the below Follow Up Schedules<b>');
        EmailMessage.AppendToBody('<br>');*/
        EmailMessage.AppendToBody('<br>');
        EmailMessage.AppendToBody('<BR>');
        EmailMessage.AppendToBody('<table border="1">');
        EmailMessage.AppendToBody('<tr>');
        EmailMessage.AppendToBody('<th>UID</th>');
        EmailMessage.AppendToBody('<th>Judian Name</th>');
        EmailMessage.AppendToBody('<th>Whatsapp No</th>');
        EmailMessage.AppendToBody('</tr>');
    end;
